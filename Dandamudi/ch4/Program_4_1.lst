     1                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     2                                  ;assemble and link with 
     3                                  ;assemble: -->> nasm -f win64 -o Program_4_1.o Program_4_1.asm -l Program_4_1.lst
     4                                  ;link:	   -->> gcc -o Program_4_1 Program_4_1.o
     5                                  ;run:      -->> Program_4_1
     6                                  ;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
     7                                  ;-----------------------------------------
     8                                  extern printf, scanf		
     9                                  
    10                                  segment .data
    11 00000000 506F72206661766F72-         msj     db "Por favor, ingrese un caracter: ",0,10
    11 00000009 2C20696E6772657365-
    11 00000012 20756E206361726163-
    11 0000001B 7465723A20000A     
    12 00000022 456C20636F6469676F-         msj1    db "El codigo ASCII de %llc en binario es: ",0
    12 0000002B 204153434949206465-
    12 00000034 20256C6C6320656E20-
    12 0000003D 62696E6172696F2065-
    12 00000046 733A2000           
    13 0000004A 0A4465736561205361-         msj2    db 10,"Desea Salir [Y/N]",0
    13 00000053 6C6972205B592F4E5D-
    13 0000005C 00                 
    14 0000005D 256C6C63                    fmt     db "%llc"
    15                                  segment .bss
    16 00000000 ????????????????            chtr    resq    1
    17 00000008 ????????????????            aux     resq    1
    18                                  segment .text 
    19                                  global main 					
    20                                  main:	
    21 00000000 4883EC20                sub rsp,0x20	
    22                                  read_char:  
    23 00000004 48B9-                               mov rcx,msj
    23 00000006 [0000000000000000] 
    24 0000000E E8(00000000)                        call printf
    25                                  
    26 00000013 48B9-                               mov rcx,fmt
    26 00000015 [5D00000000000000] 
    27 0000001D 48BA-                               mov rdx,chtr
    27 0000001F [0000000000000000] 
    28 00000027 E8(00000000)                        call scanf
    29                                  
    30 0000002C 48B9-                               mov rcx,msj1
    30 0000002E [2200000000000000] 
    31 00000036 48BA-                               mov rdx,chtr
    31 00000038 [0000000000000000] 
    32 00000040 E8(00000000)                        call printf
    33                                  
    34 00000045 B880000000                          mov rax,0x80
    35 0000004A 41B808000000                        mov r8,8
    36                                  print_bit:  
    37 00000050 48850425[00000000]                  test qword[chtr],rax
    38 00000058 740C                                jz print_0
    39 0000005A B901000000                          mov rcx,1
    40 0000005F E8(00000000)                        call printf
    41 00000064 EB0A                                jmp skip
    42                                  print_0:    
    43 00000066 B900000000                          mov rcx,0
    44 0000006B E8(00000000)                        call printf
    45                                  skip:       
    46 00000070 48D1E8                              shr rax,1
    47 00000073 49FFC8                              dec r8
    48 00000076 4983F800                            cmp r8,0
    49 0000007A 75D4                                jne print_bit
    50                                  
    51 0000007C 48B9-                               mov rcx,msj2
    51 0000007E [4A00000000000000] 
    52 00000086 E8(00000000)                        call printf
    53                                  
    54 0000008B 48B9-                               mov rcx,fmt
    54 0000008D [5D00000000000000] 
    55 00000095 48BA-                               mov rdx,aux
    55 00000097 [0800000000000000] 
    56 0000009F E8(00000000)                        call scanf
    57                                  
    58 000000A4 48833C25[08000000]-                 cmp qword[aux],'Y'
    58 000000AC 59                 
    59 000000AD 0F8451FFFFFF                        je read_char
    60 000000B3 4883C420                add rsp,0x20
    61 000000B7 C3                      ret
    62                                  ;---------------------------------------
    63                                  ;..........subrutinas....................	
